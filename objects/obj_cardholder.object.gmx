<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cardholder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//networking
mysocket=-1

//variables
CardID=0
IsEnemy=false
Pos=0
IsSelected=false
Stats=ds_map_create()
Stats[? "Base_Hp"]=0
Stats[? "Hp"]=0
Stats[? "Base_Atk"]=0
Stats[? "Atk"]=0
Stats[? "Pt"]=0
Stats[? "AtkAlrdy"]=false
//attack types
Stats[? "CrossAtk"]=false
Stats[? "SpreadAtk"]=false
Stats[? "Sweep_Atk"]=false
Stats[? "Pierce_Atk"]=false
Stats[? "Sp_Atk"]=false


//appearance
image_xscale=0.2
image_yscale=0.2
image_speed=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(Stats)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if CardID!=0{
    sprite_index=global.UnitDat_Sprite[CardID]
    image_index=global.UnitDat_Image[CardID]
    if IsSelected{
        image_xscale=0.2+(sin(current_time/100)/100)
        image_yscale=0.2+(sin(current_time/100)/100)
    }else{
        image_xscale=0.2
        image_yscale=0.2
    }
}else{
    sprite_index=spr_cardholder
    if IsEnemy{
        image_index=1
    }else{
        image_index=0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw_text(x,y,"HP: "+string(Stats[? "Hp"])+"/"+string(Stats[? "Base_Hp"]))
//draw_text(x,y+30,"ATK: "+string(Stats[? "Atk"])+"/"+string(Stats[? "Base_Atk"]))
if CardID=0{
    if global.SelectedCard!=noone{
        image_alpha=(sin(current_time/100)+1)/2
        draw_self()
        image_alpha=1
    }
}


if CardID=0{exit;}
draw_self()
var _x=x-sprite_get_width(sprite_index)*image_xscale/2
var _y=y-sprite_get_height(sprite_index)*image_yscale/2
quad(sprite_get_texture(spr_cardholder,0),
    _x-25,_y,
    _x,_y-25,
    _x,_y+25,
    _x+25,_y,
    )
draw_text(_x,_y,Stats[? "Hp"])

var _x=x-sprite_get_width(sprite_index)*image_xscale/4
var _y=y-sprite_get_height(sprite_index)*image_yscale/2
quad(sprite_get_texture(spr_cardholder,0),
    _x-25,_y,
    _x,_y-25,
    _x,_y+25,
    _x+25,_y,
    )
draw_text(_x,_y,Stats[? "Atk"])


if IsSelected{
draw_set_colour(c_blue)
draw_curve(x,y,mouse_x,mouse_y,90,10)
draw_set_colour(c_white)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
