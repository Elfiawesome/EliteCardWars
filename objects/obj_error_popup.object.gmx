<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1001</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text=""
widthratio=0
textalpha=0
backalpha=1
animationstage=0
countdown=-1
MinCountdown=5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(ft_Ebrima_Standard)
var _h=300
var _w=view_wport[0]
var _sep=string_height(text)
var _txw=_w

if string_height_ext(text,_sep,_txw)&gt;_h{
    _h=string_height_ext(text,_sep,_txw)
}
var _x=0
var _y=view_hport[0]/2-_h/2


draw_set_color(c_black)
draw_set_alpha(0.5*backalpha)
draw_rectangle(_x,_y,_x+_w*widthratio,_y+_h,false)
draw_set_color(c_black)
draw_set_alpha(1)

draw_set_color(c_white)
draw_set_valign(fa_middle)
draw_set_halign(fa_center)
draw_set_alpha(textalpha)
draw_text_ext(_x+_w/2,_y+_h/2,text,_sep,_txw)
draw_set_alpha(1)
draw_set_valign(fa_left)
draw_set_halign(fa_top)

widthratio=lerp(widthratio,1,0.1)
switch(animationstage){
    case 0:
        if widthratio&gt;0.4{
            animationstage=1
        }
    break;
    case 1:
        textalpha+=0.05
        if textalpha&gt;1 &amp;&amp; abs(widthratio-1)&lt;0.01{
            animationstage=2
            textalpha=1
            backalpha=1
        }
    break;
    case 2:
        if countdown=0{
            animationstage=3
        }
        countdown--
    break;
    case 3:
        //exiting
        textalpha-=0.05
        backalpha-=0.05
        if backalpha&lt;0 &amp;&amp; textalpha&lt;0{
            animationstage=4
        }
    break;
    case 4:
        instance_destroy()
    break;
}
if MinCountdown&lt;0{
if  mouse_check_button_pressed(mb_left)||
    mouse_check_button_pressed(mb_right)||
    keyboard_check_pressed(vk_anykey){
    animationstage=3
}
}else{
    MinCountdown--
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
